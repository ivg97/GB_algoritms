"""
2.	Посчитать четные и нечетные цифры введенного натурального числа.
Например, если введено число 34560, то у него 3 четные цифры
(4, 6 и 0) и 2 нечетные (3 и 5).

Подсказка:
На каждом шаге вам нужно 'доставать' из числа очередную цифру
и смотреть является ли она четной или нечетной. При этом увеличиваем соответствующий счетчик
Пока все числа не извлечены рекурсивные вызовы продолжаем
Условие завершения рекурсии - все числа извлечены

Используем операции % //, НЕ ИСПОЛЬЗУЕМ ОПЕРАЦИИ ВЗЯТИЯ ЭЛЕМЕНТА ПО ИНДЕКСУ

Пример:
Введите число: 123
Количество четных и нечетных цифр в числе равно: (1, 2)

Решите через рекурсию. Решение через цикл не принимается.
Для оценки Отлично в этом блоке необходимо выполнить 5 заданий из 7
"""

lst_number = [0, 0]

def numbers(number):
    value = number % 10
    if value % 2 == 0:
        lst_number[0] += 1
    else:
        lst_number[1] += 1
    number1 = number // 10
    if number1 < 10:
        value = number1 % 10
        if value % 2 == 0:
            lst_number[0] += 1
            return lst_number
        else:
            lst_number[1] += 1
            return f'Четных: {lst_number[0]}\t Нечетных: {lst_number[1]}'
    return numbers(number1)

print(numbers(545))